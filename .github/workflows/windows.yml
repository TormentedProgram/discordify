name: Windows Build
on:
  push:
  workflow_dispatch:
  
jobs:
  build:
    name: Windows Build
    permissions: write-all
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - ffmpeg_version: latest
            ffmpeg_download_url: https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z
      fail-fast: false
    env:
      FFMPEG_DOWNLOAD_URL: ${{ matrix.ffmpeg_download_url }}
      CARGO_TERM_COLOR: always
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
          $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
          Add-Content $env:GITHUB_ENV "LIBCLANG_PATH=${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
          Invoke-WebRequest "${env:FFMPEG_DOWNLOAD_URL}" -OutFile ffmpeg-release-full-shared.7z
          7z x ffmpeg-release-full-shared.7z
          mkdir ffmpeg
          mv ffmpeg-*/* ffmpeg/
          Add-Content $env:GITHUB_ENV "FFMPEG_DIR=${pwd}\ffmpeg`n"
          Add-Content $env:GITHUB_PATH "${pwd}\ffmpeg\bin`n"
          mkdir target/release
          Copy-Item "ffmpeg/bin/*.dll" "target/release" -Recurse


    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Build
      run: cargo build --release --verbose

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        path: |
          target/release/discordify.exe
          target/release/avcodec-61.dll
          target/release/avdevice-61.dll
          target/release/avfilter-10.dll
          target/release/avformat-61.dll
          target/release/avutil-59.dll
          target/release/postproc-58.dll
          target/release/swresample-5.dll
          target/release/swscale-8.dll

